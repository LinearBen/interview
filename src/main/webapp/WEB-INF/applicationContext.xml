<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring 應用程式的根配置檔案 -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 讀取外部屬性檔案，例如 app.properties，用於配置數據庫連接等 -->
    <context:property-placeholder location="classpath:app.properties"/>

    <!-- 自動掃描指定套件下的組件 (Service 和 DAO)，將它們註冊為 Spring Bean -->
    <context:component-scan base-package="com.example.service, com.example.dao" />

    <!-- 配置 HikariCP 連線池作為數據源，提供高性能的數據庫連接 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
    </bean>

    <!-- 配置 JPA 的 EntityManagerFactory，用於管理 JPA 實體 -->
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 指定掃描實體類的套件 -->
        <property name="packagesToScan" value="com.example.model" />
        <property name="jpaVendorAdapter">
            <!-- 配置 Hibernate 作為 JPA 的實現 -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" /> <!-- 顯示 SQL 語句 -->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" /> <!-- 指定數據庫方言 -->
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <!--
                    配置 Hibernate 的 DDL 自動更新策略。'update' 會根據實體類自動更新數據庫表結構。
                    警告：此設定適合開發環境，但在生產環境中極其危險，可能導致數據遺失。
                    生產環境建議使用數據庫遷移工具，如 Flyway 或 Liquibase。
                -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>

    </bean>

    <!-- 配置 JPA 事務管理器，用於管理數據庫事務 -->
    <bean id="transactionManager"
        class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- 啟用基於註解的事務管理 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>