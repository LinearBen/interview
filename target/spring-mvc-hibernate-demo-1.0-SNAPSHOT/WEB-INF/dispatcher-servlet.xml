<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring MVC DispatcherServlet 的配置檔案 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 啟用 Spring MVC 的註解驅動功能，例如 @Controller, @RequestMapping 等 -->
    <mvc:annotation-driven/>
    <!-- 啟用預設 Servlet 來處理靜態資源 (CSS, JS, 圖片等)，避免 DispatcherServlet 攔截所有請求 -->
    <mvc:default-servlet-handler/>

    <!-- 自動掃描指定套件下的 Controller 組件，將它們註冊為 Spring Bean -->
    <context:component-scan base-package="com.example.controller"/>

    <!-- 配置視圖解析器，用於將邏輯視圖名稱解析為實際的 JSP 檔案路徑 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/> <!-- JSP 檔案的前綴路徑 -->
        <property name="suffix" value=".jsp"/> <!-- JSP 檔案的後綴名 -->
    </bean>

    <!-- 註冊 MultipartResolver 以處理檔案上傳，支援 Standard Servlet 3.0+ 的檔案上傳 API -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>

</beans>